spring:
  datasource:
    url: jdbc:mysql://mysql:3306/freamdb?serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create  # 운영환경은 보통 직접 DDL 관리
    properties:
      hibernate:
        format_sql: true

  redis:
    host: prod-redis
    port: 6379
    # password: # 운영 Redis 비번

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: "my-group"
      auto-offset-reset: "earliest"

  elasticsearch:
    uris: http://elasticsearch:9200

  batch:
    jdbc:
      initialize-schema: never # 운영에선 직접 관리
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

logging:
  level:
    org.hibernate.SQL: debug
    org.springframework.security: DEBUG



jwt:
  secret: ${JWT_SECRET}

imp:
  key: ${IMP_KEY}
  secret: ${IMP_SECRET}
  pg: ${IMP_PG} # PG사와 가맹점 ID
  storeId: ${IMP_STOREID}

server:
  use-forward-headers: true
