user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log /dev/stdout main;
    error_log  /dev/stderr warn;

    sendfile        on;
    keepalive_timeout  65;
    server_tokens off;

    # SSL/TLS 설정 시 필요
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # 캐시 영역 (API 응답용, 필요시)
    proxy_cache_path /var/cache/nginx/products
                     levels=1:2
                     keys_zone=cache_products:10m
                     inactive=10m
                     max_size=1g;

    proxy_cache_path /var/cache/nginx/styles
                     levels=1:2
                     keys_zone=cache_styles:10m
                     inactive=10m
                     max_size=1g;

    proxy_cache_path /var/cache/nginx/es_products
                     levels=1:2
                     keys_zone=cache_es:10m
                     inactive=10m
                     max_size=1g;

    map $query_string $bypass_products_cache {
        default 0;
    }
    map $query_string $bypass_styles_cache {
        ""       0;
        default  1;
    }

    # 80번 포트: HTTP
    server {
        listen 80;
        server_name www.pinjun.xyz;

        # Certbot webroot 인증용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        location /stub_status {
                    stub_status;
                    # Docker 내부 네트워크에서만 접근 가능
                    allow 127.0.0.1;
                    allow 172.16.0.0/12;
                    deny all;
                }

        # 그 외 요청은 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }
   # 80번 포트: HTTP - 로컬 개발용
   server {
       listen 80;
       server_name localhost 192.168.55.164;

       # HTTPS로 리다이렉트
       location / {
           return 301 https://$host$request_uri;
       }
   }

    # 443번 포트: HTTPS
    server {
        listen 443 ssl;
#         http2;
        server_name www.pinjun.xyz;

        # SSL 인증서( Certbot 으로 발급 )
        ssl_certificate     /etc/letsencrypt/live/pinjun.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pinjun.xyz/privkey.pem;

        # (선택) HTTP/2, TLS 설정
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers on;

        # -------------------------------------------
        # 1) 리액트 정적 파일 서빙
        # -------------------------------------------
        # 예: Dockerfile에서 `COPY build/ /usr/share/nginx/html`
        #     SPA 라우팅을 위해 try_files로 index.html fallback
        root /usr/share/nginx/html;
        index index.html;

        location /_next/ {
            proxy_pass http://stacknote-frontend:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            expires 1y;
            add_header Cache-Control "public, immutable";
        }

         # (1) / -> front 컨테이너(80)
        location / {
            proxy_pass http://front:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # (1) 웹소켓을 사용하는 API 엔드포인트 설정 (예: /api/ws/)
            location /api/ws {
                proxy_pass http://app:8080/ws;  # WebSocket 서버가 실행되는 곳 (예: Spring Boot)

                # 🔥 WebSocket 업그레이드 헤더 추가
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # 🛠 Timeout 설정
                proxy_read_timeout 86400s;  # WebSocket 연결을 길게 유지
                proxy_send_timeout 86400s;
            }
        # -------------------------------------------
        # 2) /api/ 이하 요청 → 스프링 부트 프록시
        # -------------------------------------------
        location /api/ {
            proxy_pass http://app:8080/;   # app 컨테이너(8080)
            #proxy_pass http://app:8080;로 하면 /api를 붙여서 보냄
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # 추가
        }

        # ✅ GET 요청 (조회용) - 캐싱 활성화
        location /api/products/query {
            proxy_pass http://app:8080/products/query;
            proxy_cache            cache_products;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
            proxy_ignore_headers   Cache-Control Expires;
        }
        # ✅ 상품 상세 조회 (캐싱 비활성화)
        location ~* ^/api/products/query/([0-9]+)/detail$ {
            rewrite ^/api/products/query/([0-9]+)/detail$ /products/query/$1/detail break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # ✅ 상품 이미지 조회 (캐싱 비활성화)
        location ~* ^/api/products/query/([0-9]+)/images$ {
            rewrite ^/api/products/query/([0-9]+)/images$ /products/query/$1/images break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }
        # /api/styles/queries
        location /api/styles/queries {
            proxy_pass http://app:8080/styles/queries;
            proxy_cache            cache_styles;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
           proxy_ignore_headers   Cache-Control Expires;
            proxy_cache_bypass     $bypass_styles_cache;
            proxy_no_cache         $bypass_styles_cache;
        }
        # ✅ 스타일 상세 조회 (캐싱 비활성화)
        location ~* ^/api/styles/queries/([0-9]+)$ {
            rewrite ^/api/styles/queries/([0-9]+)$ /styles/queries/$1 break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # ✅ 스타일 미디어 이미지 조회 (캐싱 비활성화)
        location ~* ^/api/styles/queries/([0-9]+)/media/(.*)$ {
            rewrite ^/api/styles/queries/([0-9]+)/media/(.*)$ /styles/queries/$1/media/$2 break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # /api/es/products
        location /api/es/products {
            rewrite ^/api/es/products(.*)$ /es/products$1 break;
            proxy_pass http://app:8080;
            proxy_cache          cache_es;
            proxy_cache_valid    200 10m;
            proxy_cache_valid    404 1m;
            add_header           X-Cache-Status $upstream_cache_status;
            proxy_cache_key      "$scheme://$host$request_uri";
            proxy_ignore_headers Cache-Control Expires;
        }


        # (필요 시) purge endpoints
        location ~ /purge_products(/.*) {
            allow all;
            proxy_cache_purge cache_products $scheme$host$1;
        }
        location ~ /purge_styles(/.*) {
                    allow all;
                    proxy_cache_purge cache_styles $scheme$host$1;
        }
        location ~ /purge_es(/.*) {
            allow all;
            proxy_cache_purge cache_es $scheme$host$1;
        }


         # 키바나 프록시 설정
        location /kibana/ {
            proxy_pass http://kibana:5601/kibana/;  # kibana 컨테이너명:포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

#         # Grafana 대시보드 프록시 설정
#         location /grafana/ {
#             proxy_pass http://grafana:3000/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#
#         # Grafana의 dashboard 경로 특별 처리
#         location /grafana/d/ {
#             proxy_pass http://grafana:3000/d/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
        # -------------------------------------------
        # STT/TTS 서비스 프록시 설정
        # -------------------------------------------
        location /stt-tts/ {
            proxy_pass http://stt_tts:5000/;  # stt_tts 컨테이너의 5000번 포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 파일 업로드를 위한 설정
            client_max_body_size 100M;  # 최대 업로드 파일 크기
            proxy_read_timeout 300s;    # STT/TTS 처리 시간 고려
            proxy_send_timeout 300s;
            proxy_connect_timeout 60s;
        }

        # STT/TTS API 엔드포인트들 (선택적 - 더 세밀한 제어가 필요한 경우)
        location /stt-tts/api/ {
            proxy_pass http://stt_tts:5000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 100M;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Health check 엔드포인트
        location /stt-tts/health {
            proxy_pass http://stt_tts:5000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 정적 파일은 Nginx가 직접 제공
        location /talk/static/ {
            proxy_pass http://stt_tts:5000/talk/static/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # HTML 렌더링 포함 모든 나머지 요청은 Flask로 프록시
        location /talk/ {
            proxy_pass http://stt_tts:5000/talk;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 100M;
            proxy_read_timeout 300s;
        }

        # StackNote 정적 파일 처리 (메인 location보다 위에 배치)
        location ~ ^/stacknote/_next/static/(.*)$ {
            proxy_pass http://stacknote-frontend:3001/_next/static/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 정적 파일 캐싱
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # StackNote 기타 _next 파일들
        location ~ ^/stacknote/_next/(.*)$ {
            proxy_pass http://stacknote-frontend:3001/_next/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # StackNote 프론트엔드 서빙
        location /stacknote/ {
            proxy_pass http://stacknote-frontend:3001/stacknote/;  # stacknote-frontend 컨테이너
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # StackNote 백엔드 API 라우팅
        location /stacknote/api/ {
            proxy_pass http://stacknote-app:8080/;  # stacknote-app 컨테이너의 8080포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API 요청에 대한 타임아웃 설정
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 10s;
        }

        # StackNote WebSocket 설정
        location /stacknote/ws/ {
            proxy_pass http://stacknote-app:8080/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 연결 유지 설정
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

    }

    # ===================================================================
    # HTTPS 서버 (443번 포트) - 로컬 개발용 (localhost, 192.168.x.x, 10.x.x.x)
    # ===================================================================
    server {
        listen 443 ssl default_server;
        server_name 192.168.55.164;

        # 로컬용 자체 서명 인증서 (mkcert로 생성 권장)
        ssl_certificate     /etc/ssl/certs/localhost.pem;
        ssl_certificate_key /etc/ssl/private/localhost-key.pem;

        # HTTP/2, TLS 설정
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers on;

        # 정적 파일 루트
        root /usr/share/nginx/html;
        index index.html;

        location /_next/ {
            proxy_pass http://stacknote-frontend:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 프론트엔드 (React) 서빙
        location / {
            proxy_pass http://front:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 웹소켓 API 엔드포인트
        location /api/ws {
            proxy_pass http://app:8080/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # API 일반 요청
        location /api/ {
            proxy_pass http://app:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # GET 요청 (조회용) - 캐싱 활성화
        location /api/products/query {
            proxy_pass http://app:8080/products/query;
            proxy_cache            cache_products;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
            proxy_ignore_headers   Cache-Control Expires;
        }

        # 상품 상세 조회 (캐싱 비활성화)
        location ~* ^/api/products/query/([0-9]+)/detail$ {
            rewrite ^/api/products/query/([0-9]+)/detail$ /products/query/$1/detail break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # 상품 이미지 조회 (캐싱 비활성화)
        location ~* ^/api/products/query/([0-9]+)/images$ {
            rewrite ^/api/products/query/([0-9]+)/images$ /products/query/$1/images break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # /api/styles/queries
        location /api/styles/queries {
            proxy_pass http://app:8080/styles/queries;
            proxy_cache            cache_styles;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
            proxy_ignore_headers   Cache-Control Expires;
            proxy_cache_bypass     $bypass_styles_cache;
            proxy_no_cache         $bypass_styles_cache;
        }

        # 스타일 상세 조회 (캐싱 비활성화)
        location ~* ^/api/styles/queries/([0-9]+)$ {
            rewrite ^/api/styles/queries/([0-9]+)$ /styles/queries/$1 break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # 스타일 미디어 이미지 조회 (캐싱 비활성화)
        location ~* ^/api/styles/queries/([0-9]+)/media/(.*)$ {
            rewrite ^/api/styles/queries/([0-9]+)/media/(.*)$ /styles/queries/$1/media/$2 break;
            proxy_pass http://app:8080;
            proxy_cache_bypass    1;
            proxy_no_cache        1;
        }

        # /api/es/products
        location /api/es/products {
            rewrite ^/api/es/products(.*)$ /es/products$1 break;
            proxy_pass http://app:8080;
            proxy_cache          cache_es;
            proxy_cache_valid    200 10m;
            proxy_cache_valid    404 1m;
            add_header           X-Cache-Status $upstream_cache_status;
            proxy_cache_key      "$scheme://$host$request_uri";
            proxy_ignore_headers Cache-Control Expires;
        }

        # purge endpoints
        location ~ /purge_products(/.*) {
            allow all;
            proxy_cache_purge cache_products $scheme$host$1;
        }
        location ~ /purge_styles(/.*) {
            allow all;
            proxy_cache_purge cache_styles $scheme$host$1;
        }
        location ~ /purge_es(/.*) {
            allow all;
            proxy_cache_purge cache_es $scheme$host$1;
        }

        # 키바나 프록시 설정
        location /kibana/ {
            proxy_pass http://kibana:5601/kibana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # -------------------------------------------
        # STT/TTS 서비스 프록시 설정
        # -------------------------------------------
        location /stt-tts/ {
            proxy_pass http://stt_tts:5000/;  # stt_tts 컨테이너의 5000번 포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 파일 업로드를 위한 설정
            client_max_body_size 100M;  # 최대 업로드 파일 크기
            proxy_read_timeout 300s;    # STT/TTS 처리 시간 고려
            proxy_send_timeout 300s;
            proxy_connect_timeout 60s;
        }

        # STT/TTS API 엔드포인트들 (선택적 - 더 세밀한 제어가 필요한 경우)
        location /stt-tts/api/ {
            proxy_pass http://stt_tts:5000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 100M;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Health check 엔드포인트
        location /stt-tts/health {
            proxy_pass http://stt_tts:5000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # 정적 파일은 Nginx가 직접 제공
        location /talk/static/ {
            proxy_pass http://stt_tts:5000/talk/static/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # HTML 렌더링 포함 모든 나머지 요청은 Flask로 프록시
        location /talk/ {
            proxy_pass http://stt_tts:5000/talk;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 100M;
            proxy_read_timeout 300s;
        }

        # StackNote 정적 파일 처리 (메인 location보다 위에 배치)
        location ~ ^/stacknote/_next/static/(.*)$ {
            proxy_pass http://stacknote-frontend:3001/_next/static/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 정적 파일 캐싱
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # StackNote 기타 _next 파일들
        location ~ ^/stacknote/_next/(.*)$ {
            proxy_pass http://stacknote-frontend:3001/_next/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # StackNote 프론트엔드 서빙
        location /stacknote/ {
            proxy_pass http://stacknote-frontend:3001/stacknote/;  # stacknote-frontend 컨테이너
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # StackNote 백엔드 API 라우팅
        location /stacknote/api/ {
            proxy_pass http://stacknote-app:8080/;  # stacknote-app 컨테이너의 8080포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API 요청에 대한 타임아웃 설정
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 10s;
        }

        # StackNote WebSocket 설정
        location /stacknote/ws/ {
            proxy_pass http://stacknote-app:8080/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 연결 유지 설정
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

    }

}

#nginx인증서 인증서용

# user  nginx;
# worker_processes  auto;
#
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
#
# events {
#     worker_connections  1024;
# }
#
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#
#     # 로그 설정
#     log_format main '$remote_addr - $remote_user [$time_local] '
#                     '"$request" $status $body_bytes_sent '
#                     '"$http_referer" "$http_user_agent"';
#     access_log /dev/stdout main;
#     error_log  /dev/stderr warn;
#
#     sendfile        on;
#     keepalive_timeout  65;
#     server_tokens off;
#
#     # 80번 포트: HTTP (모든 트래픽 처리)
#     server {
#         listen 80;
#         server_name www.pinjun.xyz;
#
#         # Certbot webroot 인증용
#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }
#
#         location /stub_status {
#             stub_status;
#             allow 127.0.0.1;
#             allow 172.16.0.0/12;
#             deny all;
#         }
#
#         # 메인 페이지 - React 앱
#         location / {
#             proxy_pass http://front:80;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 웹소켓 API
#         location /api/ws {
#             proxy_pass http://app:8080/ws;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "Upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_read_timeout 86400s;
#             proxy_send_timeout 86400s;
#         }
#
#         # API 라우팅
#         location /api/ {
#             proxy_pass http://app:8080/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#
#         # 상품 조회 API
#         location /api/products/query {
#             proxy_pass http://app:8080/products/query;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 상품 상세 조회
#         location ~* ^/api/products/query/([0-9]+)/detail$ {
#             rewrite ^/api/products/query/([0-9]+)/detail$ /products/query/$1/detail break;
#             proxy_pass http://app:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 상품 이미지 조회
#         location ~* ^/api/products/query/([0-9]+)/images$ {
#             rewrite ^/api/products/query/([0-9]+)/images$ /products/query/$1/images break;
#             proxy_pass http://app:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 스타일 조회 API
#         location /api/styles/queries {
#             proxy_pass http://app:8080/styles/queries;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 스타일 상세 조회
#         location ~* ^/api/styles/queries/([0-9]+)$ {
#             rewrite ^/api/styles/queries/([0-9]+)$ /styles/queries/$1 break;
#             proxy_pass http://app:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 스타일 미디어 이미지 조회
#         location ~* ^/api/styles/queries/([0-9]+)/media/(.*)$ {
#             rewrite ^/api/styles/queries/([0-9]+)/media/(.*)$ /styles/queries/$1/media/$2 break;
#             proxy_pass http://app:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # Elasticsearch API
#         location /api/es/products {
#             rewrite ^/api/es/products(.*)$ /es/products$1 break;
#             proxy_pass http://app:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 키바나 프록시
#         location /kibana/ {
#             proxy_pass http://kibana:5601/kibana/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }


# ==================================================
# SSL 인증서 발급 완료 후 아래 내용으로 교체하세요
# ==================================================

# user  nginx;
# worker_processes  auto;
#
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
#
# events {
#     worker_connections  1024;
# }
#
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#
#     # 로그 설정
#     log_format main '$remote_addr - $remote_user [$time_local] '
#                     '"$request" $status $body_bytes_sent '
#                     '"$http_referer" "$http_user_agent"';
#     access_log /dev/stdout main;
#     error_log  /dev/stderr warn;
#
#     sendfile        on;
#     keepalive_timeout  65;
#     server_tokens off;
#
#     # SSL/TLS 설정
#     ssl_protocols       TLSv1.2 TLSv1.3;
#     ssl_ciphers         HIGH:!aNULL:!MD5;
#
#     # 캐시 영역
#     proxy_cache_path /var/cache/nginx/products
#                      levels=1:2
#                      keys_zone=cache_products:10m
#                      inactive=10m
#                      max_size=1g;
#
#     proxy_cache_path /var/cache/nginx/styles
#                      levels=1:2
#                      keys_zone=cache_styles:10m
#                      inactive=10m
#                      max_size=1g;
#
#     proxy_cache_path /var/cache/nginx/es_products
#                      levels=1:2
#                      keys_zone=cache_es:10m
#                      inactive=10m
#                      max_size=1g;
#
#     map $query_string $bypass_products_cache {
#         default 0;
#     }
#     map $query_string $bypass_styles_cache {
#         ""       0;
#         default  1;
#     }
#
#     # 80번 포트: HTTP → HTTPS 리다이렉트
#     server {
#         listen 80;
#         server_name www.pinjun.xyz;
#
#         # Certbot webroot 인증용
#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }
#
#         location /stub_status {
#             stub_status;
#             allow 127.0.0.1;
#             allow 172.16.0.0/12;
#             deny all;
#         }
#
#         # 그 외 요청은 HTTPS로 리다이렉트
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
#
#     # 443번 포트: HTTPS
#     server {
#         listen 443 ssl;
#         server_name www.pinjun.xyz;
#
#         # SSL 인증서
#         ssl_certificate     /etc/letsencrypt/live/www.pinjun.xyz/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/www.pinjun.xyz/privkey.pem;
#
#         ssl_session_cache shared:SSL:10m;
#         ssl_session_timeout 10m;
#         ssl_prefer_server_ciphers on;
#
#         root /usr/share/nginx/html;
#         index index.html;
#
#         # 메인 페이지 - React 앱
#         location / {
#             proxy_pass http://front:80;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#
#         # 웹소켓 API
#         location /api/ws {
#             proxy_pass http://app:8080/ws;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "Upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_read_timeout 86400s;
#             proxy_send_timeout 86400s;
#         }
#
#         # API 라우팅
#         location /api/ {
#             proxy_pass http://app:8080/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#
#         # 상품 조회 API (캐싱 활성화)
#         location /api/products/query {
#             proxy_pass http://app:8080/products/query;
#             proxy_cache            cache_products;
#             proxy_cache_valid      200 10m;
#             proxy_cache_valid      404 1m;
#             add_header             X-Cache-Status $upstream_cache_status;
#             proxy_cache_key        "$scheme://$host$request_uri";
#             proxy_ignore_headers   Cache-Control Expires;
#         }
#
#         # 상품 상세 조회 (캐싱 비활성화)
#         location ~* ^/api/products/query/([0-9]+)/detail$ {
#             rewrite ^/api/products/query/([0-9]+)/detail$ /products/query/$1/detail break;
#             proxy_pass http://app:8080;
#             proxy_cache_bypass    1;
#             proxy_no_cache        1;
#         }
#
#         # 상품 이미지 조회 (캐싱 비활성화)
#         location ~* ^/api/products/query/([0-9]+)/images$ {
#             rewrite ^/api/products/query/([0-9]+)/images$ /products/query/$1/images break;
#             proxy_pass http://app:8080;
#             proxy_cache_bypass    1;
#             proxy_no_cache        1;
#         }
#
#         # 스타일 조회 API
#         location /api/styles/queries {
#             proxy_pass http://app:8080/styles/queries;
#             proxy_cache            cache_styles;
#             proxy_cache_valid      200 10m;
#             proxy_cache_valid      404 1m;
#             add_header             X-Cache-Status $upstream_cache_status;
#             proxy_cache_key        "$scheme://$host$request_uri";
#             proxy_ignore_headers   Cache-Control Expires;
#             proxy_cache_bypass     $bypass_styles_cache;
#             proxy_no_cache         $bypass_styles_cache;
#         }
#
#         # 스타일 상세 조회 (캐싱 비활성화)
#         location ~* ^/api/styles/queries/([0-9]+)$ {
#             rewrite ^/api/styles/queries/([0-9]+)$ /styles/queries/$1 break;
#             proxy_pass http://app:8080;
#             proxy_cache_bypass    1;
#             proxy_no_cache        1;
#         }
#
#         # 스타일 미디어 이미지 조회 (캐싱 비활성화)
#         location ~* ^/api/styles/queries/([0-9]+)/media/(.*)$ {
#             rewrite ^/api/styles/queries/([0-9]+)/media/(.*)$ /styles/queries/$1/media/$2 break;
#             proxy_pass http://app:8080;
#             proxy_cache_bypass    1;
#             proxy_no_cache        1;
#         }
#
#         # Elasticsearch API
#         location /api/es/products {
#             rewrite ^/api/es/products(.*)$ /es/products$1 break;
#             proxy_pass http://app:8080;
#             proxy_cache          cache_es;
#             proxy_cache_valid    200 10m;
#             proxy_cache_valid    404 1m;
#             add_header           X-Cache-Status $upstream_cache_status;
#             proxy_cache_key      "$scheme://$host$request_uri";
#             proxy_ignore_headers Cache-Control Expires;
#         }
#
#         # 캐시 purge endpoints
#         location ~ /purge_products(/.*) {
#             allow all;
#             proxy_cache_purge cache_products $scheme$host$1;
#         }
#         location ~ /purge_styles(/.*) {
#             allow all;
#             proxy_cache_purge cache_styles $scheme$host$1;
#         }
#         location ~ /purge_es(/.*) {
#             allow all;
#             proxy_cache_purge cache_es $scheme$host$1;
#         }
#
#         # 키바나 프록시
#         location /kibana/ {
#             proxy_pass http://kibana:5601/kibana/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }