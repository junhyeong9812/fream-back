user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    resolver 127.0.0.11 ipv6=off valid=30s;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

    # Nginx 로그 (docker logs 로 출력)
    access_log /dev/stdout main;
    error_log  /dev/stderr warn;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;

    # 캐시 경로 (products, styles, es_products 등)
    proxy_cache_path /var/cache/nginx/products
                     levels=1:2
                     keys_zone=cache_products:10m
                     inactive=10m
                     max_size=1g;

    proxy_cache_path /var/cache/nginx/styles
                     levels=1:2
                     keys_zone=cache_styles:10m
                     inactive=10m
                     max_size=1g;

    proxy_cache_path /var/cache/nginx/es_products
                     levels=1:2
                     keys_zone=cache_es:10m
                     inactive=10m
                     max_size=1g;

    map $query_string $bypass_products_cache {
      default 0;
    }
    map $query_string $bypass_styles_cache {
      ""       0;
      default  1;
    }

    server {
        listen 80;
        server_name localhost;

        # / -> host.docker.internal:8080 (호스트의 스프링)
        location / {
            proxy_pass http://host.docker.internal:8080;
        }

        # /api/products
        location /api/products {
            proxy_pass http://host.docker.internal:8080;
            proxy_cache            cache_products;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
            proxy_ignore_headers   Cache-Control Expires;
        }

        # /api/styles/queries
        location /api/styles/queries {
            proxy_pass http://host.docker.internal:8080;
            proxy_cache            cache_styles;
            proxy_cache_valid      200 10m;
            proxy_cache_valid      404 1m;
            add_header             X-Cache-Status $upstream_cache_status;
            proxy_cache_key        "$scheme://$host$request_uri";
            proxy_ignore_headers   Cache-Control Expires;
            proxy_cache_bypass     $bypass_styles_cache;
            proxy_no_cache         $bypass_styles_cache;
        }

        # /api/es/products
        location /api/es/products {
            proxy_pass http://host.docker.internal:8080;
            proxy_cache          cache_es;
            proxy_cache_valid    200 10m;
            proxy_cache_valid    404 1m;
            add_header           X-Cache-Status $upstream_cache_status;
            proxy_cache_key      "$scheme://$host$request_uri";
            proxy_ignore_headers Cache-Control Expires;
        }

        # purge endpoints
        location ~ /purge_products(/.*) {
            allow all;
            proxy_cache_purge cache_products $scheme$host$1;
        }
        location ~ /purge_styles(/.*) {
            allow all;
            proxy_cache_purge cache_styles $scheme$host$1;
        }
        location ~ /purge_es(/.*) {
            allow all;
            proxy_cache_purge cache_es $scheme$host$1;
        }
    }
}
